# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

# import campaign_mobile_pb2 as campaign__mobile__pb2
from Celer_Game.celer_games_api_regression.pythonLib.Celer_campaign_mobile import campaign_mobile_pb2 as campaign__mobile__pb2


class MobileStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDepositCampaignTaskOffer = channel.unary_unary(
                '/campaign.Mobile/GetDepositCampaignTaskOffer',
                request_serializer=campaign__mobile__pb2.GetDepositCampaignTaskOfferRequest.SerializeToString,
                response_deserializer=campaign__mobile__pb2.GetDepositCampaignTaskOfferResponse.FromString,
                )
        self.QueryCampaignIsDepositable = channel.unary_unary(
                '/campaign.Mobile/QueryCampaignIsDepositable',
                request_serializer=campaign__mobile__pb2.QueryCampaignIsDepositableRequest.SerializeToString,
                response_deserializer=campaign__mobile__pb2.QueryCampaignIsDepositableResponse.FromString,
                )
        self.DismissNotificationForCampaignOffer = channel.unary_unary(
                '/campaign.Mobile/DismissNotificationForCampaignOffer',
                request_serializer=campaign__mobile__pb2.DismissNotificationForCampaignOfferRequest.SerializeToString,
                response_deserializer=campaign__mobile__pb2.DismissNotificationForCampaignOfferResponse.FromString,
                )
        self.MarkCampaignOfferPassed = channel.unary_unary(
                '/campaign.Mobile/MarkCampaignOfferPassed',
                request_serializer=campaign__mobile__pb2.MarkCampaignOfferPassedRequest.SerializeToString,
                response_deserializer=campaign__mobile__pb2.MarkCampaignOfferPassedResponse.FromString,
                )
        self.GetTimeLimitedDepositOptions = channel.unary_unary(
                '/campaign.Mobile/GetTimeLimitedDepositOptions',
                request_serializer=campaign__mobile__pb2.GetTimeLimitedDepositOptionsRequest.SerializeToString,
                response_deserializer=campaign__mobile__pb2.GetTimeLimitedDepositOptionsResponse.FromString,
                )
        self.GetNotTimeLimitedDepositOptions = channel.unary_unary(
                '/campaign.Mobile/GetNotTimeLimitedDepositOptions',
                request_serializer=campaign__mobile__pb2.GetNonTimeLimitedDepositOptionsRequest.SerializeToString,
                response_deserializer=campaign__mobile__pb2.GetNonTimeLimitedDepositOptionsResponse.FromString,
                )
        self.GetAllEligibleDepositOptions = channel.unary_unary(
                '/campaign.Mobile/GetAllEligibleDepositOptions',
                request_serializer=campaign__mobile__pb2.GetAllEligibleDepositOptionsRequest.SerializeToString,
                response_deserializer=campaign__mobile__pb2.GetAllEligibleDepositOptionsResponse.FromString,
                )


class MobileServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetDepositCampaignTaskOffer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryCampaignIsDepositable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DismissNotificationForCampaignOffer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkCampaignOfferPassed(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimeLimitedDepositOptions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNotTimeLimitedDepositOptions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllEligibleDepositOptions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MobileServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDepositCampaignTaskOffer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDepositCampaignTaskOffer,
                    request_deserializer=campaign__mobile__pb2.GetDepositCampaignTaskOfferRequest.FromString,
                    response_serializer=campaign__mobile__pb2.GetDepositCampaignTaskOfferResponse.SerializeToString,
            ),
            'QueryCampaignIsDepositable': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryCampaignIsDepositable,
                    request_deserializer=campaign__mobile__pb2.QueryCampaignIsDepositableRequest.FromString,
                    response_serializer=campaign__mobile__pb2.QueryCampaignIsDepositableResponse.SerializeToString,
            ),
            'DismissNotificationForCampaignOffer': grpc.unary_unary_rpc_method_handler(
                    servicer.DismissNotificationForCampaignOffer,
                    request_deserializer=campaign__mobile__pb2.DismissNotificationForCampaignOfferRequest.FromString,
                    response_serializer=campaign__mobile__pb2.DismissNotificationForCampaignOfferResponse.SerializeToString,
            ),
            'MarkCampaignOfferPassed': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkCampaignOfferPassed,
                    request_deserializer=campaign__mobile__pb2.MarkCampaignOfferPassedRequest.FromString,
                    response_serializer=campaign__mobile__pb2.MarkCampaignOfferPassedResponse.SerializeToString,
            ),
            'GetTimeLimitedDepositOptions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimeLimitedDepositOptions,
                    request_deserializer=campaign__mobile__pb2.GetTimeLimitedDepositOptionsRequest.FromString,
                    response_serializer=campaign__mobile__pb2.GetTimeLimitedDepositOptionsResponse.SerializeToString,
            ),
            'GetNotTimeLimitedDepositOptions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNotTimeLimitedDepositOptions,
                    request_deserializer=campaign__mobile__pb2.GetNonTimeLimitedDepositOptionsRequest.FromString,
                    response_serializer=campaign__mobile__pb2.GetNonTimeLimitedDepositOptionsResponse.SerializeToString,
            ),
            'GetAllEligibleDepositOptions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllEligibleDepositOptions,
                    request_deserializer=campaign__mobile__pb2.GetAllEligibleDepositOptionsRequest.FromString,
                    response_serializer=campaign__mobile__pb2.GetAllEligibleDepositOptionsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'campaign.Mobile', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Mobile(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetDepositCampaignTaskOffer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/campaign.Mobile/GetDepositCampaignTaskOffer',
            campaign__mobile__pb2.GetDepositCampaignTaskOfferRequest.SerializeToString,
            campaign__mobile__pb2.GetDepositCampaignTaskOfferResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryCampaignIsDepositable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/campaign.Mobile/QueryCampaignIsDepositable',
            campaign__mobile__pb2.QueryCampaignIsDepositableRequest.SerializeToString,
            campaign__mobile__pb2.QueryCampaignIsDepositableResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DismissNotificationForCampaignOffer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/campaign.Mobile/DismissNotificationForCampaignOffer',
            campaign__mobile__pb2.DismissNotificationForCampaignOfferRequest.SerializeToString,
            campaign__mobile__pb2.DismissNotificationForCampaignOfferResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarkCampaignOfferPassed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/campaign.Mobile/MarkCampaignOfferPassed',
            campaign__mobile__pb2.MarkCampaignOfferPassedRequest.SerializeToString,
            campaign__mobile__pb2.MarkCampaignOfferPassedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTimeLimitedDepositOptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/campaign.Mobile/GetTimeLimitedDepositOptions',
            campaign__mobile__pb2.GetTimeLimitedDepositOptionsRequest.SerializeToString,
            campaign__mobile__pb2.GetTimeLimitedDepositOptionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNotTimeLimitedDepositOptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/campaign.Mobile/GetNotTimeLimitedDepositOptions',
            campaign__mobile__pb2.GetNonTimeLimitedDepositOptionsRequest.SerializeToString,
            campaign__mobile__pb2.GetNonTimeLimitedDepositOptionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllEligibleDepositOptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/campaign.Mobile/GetAllEligibleDepositOptions',
            campaign__mobile__pb2.GetAllEligibleDepositOptionsRequest.SerializeToString,
            campaign__mobile__pb2.GetAllEligibleDepositOptionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
