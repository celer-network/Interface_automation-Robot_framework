# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import loyalty_mobile_pb2 as loyalty__mobile__pb2


class MobileStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetFirstGame = channel.unary_unary(
                '/loyalty.Mobile/GetFirstGame',
                request_serializer=loyalty__mobile__pb2.GetFirstGameRequest.SerializeToString,
                response_deserializer=loyalty__mobile__pb2.GetFirstGameResponse.FromString,
                )
        self.GetCheckin = channel.unary_unary(
                '/loyalty.Mobile/GetCheckin',
                request_serializer=loyalty__mobile__pb2.GetCheckinRequest.SerializeToString,
                response_deserializer=loyalty__mobile__pb2.GetCheckinResponse.FromString,
                )
        self.SubmitCheckin = channel.unary_unary(
                '/loyalty.Mobile/SubmitCheckin',
                request_serializer=loyalty__mobile__pb2.SubmitCheckinRequest.SerializeToString,
                response_deserializer=loyalty__mobile__pb2.SubmitCheckinResponse.FromString,
                )
        self.ResetCheckin = channel.unary_unary(
                '/loyalty.Mobile/ResetCheckin',
                request_serializer=loyalty__mobile__pb2.ResetCheckinRequest.SerializeToString,
                response_deserializer=loyalty__mobile__pb2.ResetCheckinResponse.FromString,
                )
        self.GetTasks = channel.unary_unary(
                '/loyalty.Mobile/GetTasks',
                request_serializer=loyalty__mobile__pb2.GetTasksRequest.SerializeToString,
                response_deserializer=loyalty__mobile__pb2.GetTasksResponse.FromString,
                )
        self.AcceptTask = channel.unary_unary(
                '/loyalty.Mobile/AcceptTask',
                request_serializer=loyalty__mobile__pb2.AcceptTaskRequest.SerializeToString,
                response_deserializer=loyalty__mobile__pb2.AcceptTaskResponse.FromString,
                )
        self.AcceptAllTasks = channel.unary_unary(
                '/loyalty.Mobile/AcceptAllTasks',
                request_serializer=loyalty__mobile__pb2.AcceptAllTasksRequest.SerializeToString,
                response_deserializer=loyalty__mobile__pb2.AcceptAllTasksResponse.FromString,
                )
        self.ClaimTask = channel.unary_unary(
                '/loyalty.Mobile/ClaimTask',
                request_serializer=loyalty__mobile__pb2.ClaimTaskRequest.SerializeToString,
                response_deserializer=loyalty__mobile__pb2.ClaimTaskResponse.FromString,
                )
        self.GetRedeemTable = channel.unary_unary(
                '/loyalty.Mobile/GetRedeemTable',
                request_serializer=loyalty__mobile__pb2.GetRedeemTableRequest.SerializeToString,
                response_deserializer=loyalty__mobile__pb2.GetRedeemTableResponse.FromString,
                )
        self.Redeem = channel.unary_unary(
                '/loyalty.Mobile/Redeem',
                request_serializer=loyalty__mobile__pb2.RedeemRequest.SerializeToString,
                response_deserializer=loyalty__mobile__pb2.RedeemResponse.FromString,
                )
        self.GetTier = channel.unary_unary(
                '/loyalty.Mobile/GetTier',
                request_serializer=loyalty__mobile__pb2.GetTierRequest.SerializeToString,
                response_deserializer=loyalty__mobile__pb2.GetTierResponse.FromString,
                )
        self.GetTiers = channel.unary_unary(
                '/loyalty.Mobile/GetTiers',
                request_serializer=loyalty__mobile__pb2.GetTiersRequest.SerializeToString,
                response_deserializer=loyalty__mobile__pb2.GetTiersResponse.FromString,
                )
        self.ClaimFreeLootBox = channel.unary_unary(
                '/loyalty.Mobile/ClaimFreeLootBox',
                request_serializer=loyalty__mobile__pb2.ClaimFreeLootBoxRequest.SerializeToString,
                response_deserializer=loyalty__mobile__pb2.ClaimFreeLootBoxResponse.FromString,
                )
        self.GetDailyRewardsPreview = channel.unary_unary(
                '/loyalty.Mobile/GetDailyRewardsPreview',
                request_serializer=loyalty__mobile__pb2.GetDailyRewardsPreviewRequest.SerializeToString,
                response_deserializer=loyalty__mobile__pb2.GetDailyRewardsPreviewResponse.FromString,
                )


class MobileServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetFirstGame(self, request, context):
        """Called by the client (SDK).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCheckin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitCheckin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetCheckin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTasks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AcceptTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AcceptAllTasks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClaimTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRedeemTable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Redeem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTier(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTiers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClaimFreeLootBox(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDailyRewardsPreview(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MobileServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetFirstGame': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFirstGame,
                    request_deserializer=loyalty__mobile__pb2.GetFirstGameRequest.FromString,
                    response_serializer=loyalty__mobile__pb2.GetFirstGameResponse.SerializeToString,
            ),
            'GetCheckin': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCheckin,
                    request_deserializer=loyalty__mobile__pb2.GetCheckinRequest.FromString,
                    response_serializer=loyalty__mobile__pb2.GetCheckinResponse.SerializeToString,
            ),
            'SubmitCheckin': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitCheckin,
                    request_deserializer=loyalty__mobile__pb2.SubmitCheckinRequest.FromString,
                    response_serializer=loyalty__mobile__pb2.SubmitCheckinResponse.SerializeToString,
            ),
            'ResetCheckin': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetCheckin,
                    request_deserializer=loyalty__mobile__pb2.ResetCheckinRequest.FromString,
                    response_serializer=loyalty__mobile__pb2.ResetCheckinResponse.SerializeToString,
            ),
            'GetTasks': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTasks,
                    request_deserializer=loyalty__mobile__pb2.GetTasksRequest.FromString,
                    response_serializer=loyalty__mobile__pb2.GetTasksResponse.SerializeToString,
            ),
            'AcceptTask': grpc.unary_unary_rpc_method_handler(
                    servicer.AcceptTask,
                    request_deserializer=loyalty__mobile__pb2.AcceptTaskRequest.FromString,
                    response_serializer=loyalty__mobile__pb2.AcceptTaskResponse.SerializeToString,
            ),
            'AcceptAllTasks': grpc.unary_unary_rpc_method_handler(
                    servicer.AcceptAllTasks,
                    request_deserializer=loyalty__mobile__pb2.AcceptAllTasksRequest.FromString,
                    response_serializer=loyalty__mobile__pb2.AcceptAllTasksResponse.SerializeToString,
            ),
            'ClaimTask': grpc.unary_unary_rpc_method_handler(
                    servicer.ClaimTask,
                    request_deserializer=loyalty__mobile__pb2.ClaimTaskRequest.FromString,
                    response_serializer=loyalty__mobile__pb2.ClaimTaskResponse.SerializeToString,
            ),
            'GetRedeemTable': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRedeemTable,
                    request_deserializer=loyalty__mobile__pb2.GetRedeemTableRequest.FromString,
                    response_serializer=loyalty__mobile__pb2.GetRedeemTableResponse.SerializeToString,
            ),
            'Redeem': grpc.unary_unary_rpc_method_handler(
                    servicer.Redeem,
                    request_deserializer=loyalty__mobile__pb2.RedeemRequest.FromString,
                    response_serializer=loyalty__mobile__pb2.RedeemResponse.SerializeToString,
            ),
            'GetTier': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTier,
                    request_deserializer=loyalty__mobile__pb2.GetTierRequest.FromString,
                    response_serializer=loyalty__mobile__pb2.GetTierResponse.SerializeToString,
            ),
            'GetTiers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTiers,
                    request_deserializer=loyalty__mobile__pb2.GetTiersRequest.FromString,
                    response_serializer=loyalty__mobile__pb2.GetTiersResponse.SerializeToString,
            ),
            'ClaimFreeLootBox': grpc.unary_unary_rpc_method_handler(
                    servicer.ClaimFreeLootBox,
                    request_deserializer=loyalty__mobile__pb2.ClaimFreeLootBoxRequest.FromString,
                    response_serializer=loyalty__mobile__pb2.ClaimFreeLootBoxResponse.SerializeToString,
            ),
            'GetDailyRewardsPreview': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDailyRewardsPreview,
                    request_deserializer=loyalty__mobile__pb2.GetDailyRewardsPreviewRequest.FromString,
                    response_serializer=loyalty__mobile__pb2.GetDailyRewardsPreviewResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'loyalty.Mobile', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Mobile(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetFirstGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/loyalty.Mobile/GetFirstGame',
            loyalty__mobile__pb2.GetFirstGameRequest.SerializeToString,
            loyalty__mobile__pb2.GetFirstGameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCheckin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/loyalty.Mobile/GetCheckin',
            loyalty__mobile__pb2.GetCheckinRequest.SerializeToString,
            loyalty__mobile__pb2.GetCheckinResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubmitCheckin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/loyalty.Mobile/SubmitCheckin',
            loyalty__mobile__pb2.SubmitCheckinRequest.SerializeToString,
            loyalty__mobile__pb2.SubmitCheckinResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetCheckin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/loyalty.Mobile/ResetCheckin',
            loyalty__mobile__pb2.ResetCheckinRequest.SerializeToString,
            loyalty__mobile__pb2.ResetCheckinResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTasks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/loyalty.Mobile/GetTasks',
            loyalty__mobile__pb2.GetTasksRequest.SerializeToString,
            loyalty__mobile__pb2.GetTasksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AcceptTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/loyalty.Mobile/AcceptTask',
            loyalty__mobile__pb2.AcceptTaskRequest.SerializeToString,
            loyalty__mobile__pb2.AcceptTaskResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AcceptAllTasks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/loyalty.Mobile/AcceptAllTasks',
            loyalty__mobile__pb2.AcceptAllTasksRequest.SerializeToString,
            loyalty__mobile__pb2.AcceptAllTasksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClaimTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/loyalty.Mobile/ClaimTask',
            loyalty__mobile__pb2.ClaimTaskRequest.SerializeToString,
            loyalty__mobile__pb2.ClaimTaskResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRedeemTable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/loyalty.Mobile/GetRedeemTable',
            loyalty__mobile__pb2.GetRedeemTableRequest.SerializeToString,
            loyalty__mobile__pb2.GetRedeemTableResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Redeem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/loyalty.Mobile/Redeem',
            loyalty__mobile__pb2.RedeemRequest.SerializeToString,
            loyalty__mobile__pb2.RedeemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTier(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/loyalty.Mobile/GetTier',
            loyalty__mobile__pb2.GetTierRequest.SerializeToString,
            loyalty__mobile__pb2.GetTierResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTiers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/loyalty.Mobile/GetTiers',
            loyalty__mobile__pb2.GetTiersRequest.SerializeToString,
            loyalty__mobile__pb2.GetTiersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClaimFreeLootBox(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/loyalty.Mobile/ClaimFreeLootBox',
            loyalty__mobile__pb2.ClaimFreeLootBoxRequest.SerializeToString,
            loyalty__mobile__pb2.ClaimFreeLootBoxResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDailyRewardsPreview(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/loyalty.Mobile/GetDailyRewardsPreview',
            loyalty__mobile__pb2.GetDailyRewardsPreviewRequest.SerializeToString,
            loyalty__mobile__pb2.GetDailyRewardsPreviewResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
